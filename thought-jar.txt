We follow existing patterns when we write code. Juniors more than seniors, but all developers do it.

If the existing pattern is good, following it improves the codebase. If the existing pattern is bad, following it worsens the codebase.

Whenever you are writing something new, think about the patterns you are encouraging.
--
If I ever get real rich, I hope I'm not real mean to poor people, like I am now.
--
A good programmer is someone who looks both ways before crossing a one-way street.
--
Walking on water and developing software from a specification are easy if both are frozen.
--
“Everyone knows that debugging is twice as hard as writing a program in the first place. So if you're as clever as you can be when you write it, how will you ever debug it?” Brian Kernighan
--
“Improving daily work is even more important than doing daily work.” Gene Kim
--
“Being able to take needless work out of the system is more important than being able to put more work into the system.” Gene Kim
--
“Until code is in production, no value is actually being generated, because it’s merely WIP stuck in the system.” Gene Kim
--
"Left unchecked, technical debt will ensure that the only work that gets done is unplanned work!" Gene Kim
--
Obvious code is important. What you can do in one line you should do in three.
--
"There are two ways of constructing a software design: One way is to make it so simple that there are obviously no deficiencies, and the other way is to make it so complicated that there are no obvious deficiencies. The first method is far more difficult." C. A. R. Hoare
--
People don't decide what they believe. When a person is convinced of something, they believe it. There's no choice in the matter. Trying to convince someone has nothing to do with trying to make the person choose to believe.

